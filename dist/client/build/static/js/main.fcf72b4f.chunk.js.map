{"version":3,"sources":["logo.svg","utils/api.js","store/restoran.js","view/Orders.js","App.js","reportWebVitals.js","index.js"],"names":["headers","Headers","post","url","body","options","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","params","fetch","process","then","res","json","api","method","getOrdersFx","createEffect","a","place_id","req","orderStore","createStore","on","done","state","result","useStyles","makeStyles","theme","seeMore","marginTop","spacing","Orders","loading","useStore","pending","orders","useEffect","value","queryString","parse","window","location","search","setInterval","style","display","justifyContent","CircularProgress","overflow","Fragment","Typography","component","variant","color","gutterBottom","restoran_name","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","order","date","user","table","count_guest","food_name","total_sum","id","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf72b4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const apiUrl = process.env.REACT_APP_API;\n\nconst headers = new Headers({\n    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n});\n\nexport const api = (url, params) =>{\n    return fetch(`${apiUrl}${url}`, params)\n        .then(res => res.json())\n}\nexport const post = (url, body, options) => {\n    var formBody = [];\n    for (var property in body) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(body[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    return api(url, { headers, ...options,method: \"POST\", body: formBody });\n  }","import { createStore, createEffect } from 'effector'\nimport { post } from '../utils/api';\n\nexport const getOrdersFx = createEffect(async (params) => {\n  const req = await post('/orders-list',{\n    place_id: params.place_id,\n\n  });\n  return req;\n})\n\nexport const orderStore = createStore([])\n  .on(getOrdersFx.done, (state, { result }) =>  {\n    if (!result ) return false;\n    return result;\n  })\n\n","import React,{useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {useStore} from 'effector-react';\nimport { orderStore ,getOrdersFx } from '../store/restoran';\nimport queryString from 'query-string'\n\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n\n  const loading = useStore(getOrdersFx.pending);\n  const orders = useStore(orderStore);\n  var place_id=0;\n  useEffect(() => {\n    const value=queryString.parse(window.location.search);\n    place_id=value.place_id;\n    if(place_id){\n        getOrdersFx({ place_id: place_id });\n        setInterval(() => {\n            getOrdersFx({ place_id: place_id });\n        }, 20000);\n    }\n  }, []);\n  \n  if (loading) return(\n     <div style={{display: 'flex', justifyContent: 'center'}}>\n        <CircularProgress  />\n    </div>)\n  return (\n    <div style={{overflow: \"hidden\"}}>\n        {\n            orders && orders!==\"error\" ?\n                <React.Fragment>  \n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        {orders.orders ? orders.orders[0].restoran_name : \"Restoran name\"}\n                    </Typography>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Күн/Уақыт</TableCell>\n                                <TableCell>Клиент</TableCell>\n                                <TableCell>Орын</TableCell>\n                                <TableCell>Адам саны</TableCell>\n                                <TableCell>Мәзір</TableCell>\n                                <TableCell align=\"right\">Төлемге</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {\n                            orders.orders && orders.orders.map(function(order){\n                                return(\n                                    <TableRow key={order.id}>\n                                        <TableCell>{order.date}</TableCell>\n                                        <TableCell>{order.user}</TableCell>\n                                        <TableCell>{order.table} стол</TableCell>\n                                        <TableCell>{order.count_guest} адам</TableCell>\n                                        <TableCell>{order.food_name}</TableCell>\n                                        <TableCell align=\"right\">{order.total_sum} тенге</TableCell>\n                                    </TableRow>\n                                )\n                            })\n                        }\n                            \n                        </TableBody>\n                    </Table>\n                </React.Fragment>\n            :\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                    Мейрамхана белгісіз\n                </Typography>\n            \n        }\n        \n    </div>\n    \n  );\n}","import logo from './logo.svg';\nimport Orders from './view/Orders.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Orders />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}